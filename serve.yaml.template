---
apiVersion: v1
kind: Service
metadata:
  annotations:
    getambassador.io/config: |-
      ---
      apiVersion: ambassador/v0
      kind:  Mapping
      name: tfserving-predict-mapping-{{MODEL_NAME}}
      prefix: tfserving/models/{{MODEL_NAME}}/
      rewrite: /v1/models/{{MODEL_NAME}}:predict
      method: POST
      service: {{MODEL_NAME}}.{{NAMESPACE}}:8500
  labels:
    app: "{{MODEL_NAME}}"
  name: "{{MODEL_NAME}}"
spec:
  ports:
  - name: grpc-tf-serving
    port: 9000
    targetPort: 9000
  - name: tf-serving-builtin-http
    port: 8500
    targetPort: 8500
  selector:
    app: MODEL_NAME
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: "{{MODEL_NAME}}"
  name: "{{MODEL_NAME}}"
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: "{{MODEL_NAME}}"
        version: v1
    spec:
      containers:
      - args:
        - --port=9000
        - --rest_api_port=8500
        - --model_name="{{MODEL_NAME}}"
        - --model_base_path="{{MODEL_PATH}}"
        command:
        - /usr/bin/tensorflow_model_server
        env:
        - name: S3_USE_HTTPS
          value: '1'
        - name: S3_VERIFY_SSL
          value: '0'
        - name: S3_REGION
          value: "{{S3_REGION}}"
        - name: AWS_REGION
          value: "{{S3_REGION}}"
        - name: S3_ENDPOINT
          value: "{{S3_ENDPOINT}}"
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: access_key
              name: "{{AWS_SECRET}}"
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: secret_key
              name: "{{AWS_SECRET}}"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: /secret/gcp-credentials/user-gcp-sa.json
        volumeMounts:
        - name: gcp-credentials
          mountPath: /secret/gcp-credentials
        image: tensorflow/serving
        imagePullPolicy: IfNotPresent
        livenessProbe:
          initialDelaySeconds: 30
          periodSeconds: 30
          tcpSocket:
            port: 9000
        name: "{{MODEL_NAME}}"
        ports:
        - containerPort: 9000
        - containerPort: 8500
        resources:
          limits:
            cpu: "1"
            memory: 4Gi
          requests:
            cpu: "1"
            memory: 1Gi
      volumes:
        - name: gcp-credentials
          secret:
            secretName: user-gcp-sa