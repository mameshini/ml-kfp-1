---
version: 1
kind: application
meta:
  name: kubeflow-pieline:1
  brief: >
    End to end Kubeflow pipeline
  source:
    dir: .
components:
- name: github-repository
  source:
    dir: ../../../components/github-repository
- name: kaniko
  source:
    dir: ../../../components/kaniko
- name: s3fuse
  source:
    dir: ../../../components/s3fs
lifecycle:
  bare: allow
  verbs: [deploy, undeploy]
  order:
    - github-repository
    - s3fuse
    - kaniko
parameters:
- name: dns.domain
  env: DOMAIN_NAME
- name: cloud.region
  value: us-east-1
- name: application
  parameters:
  - name: name
    value: kubeflow
    env: APPLICATION
  - name: notebook.name
    kind: link
    value: ${application.name}-notebook
  - name: workspace.size
    value: 10Gi
  - name: workspace.uid
    value: '1000'
  - name: workspace.gid
    value: '100'
  - name: namespace
    value: kubeflow
    env: NAMESPACE
  - name: git.kind
    value: github
  - name: description
    value: End-to-end Kubeflow pipeline
  - name: git.cloneUrl
    kind: link
    value: ${component.github.repository.cloneUrl}
    empty: allow
  - name: docker.registry.url
    kind: link
    value: ${component.harbor.url}
  - name: docker.registry.pullSecret
    kind: link
    env: PULL_SECRET
    value: ${component.harbor.pullSecret}
    empty: allow
  - name: docker.registry.pullSecret.namespace
    value: harbor
    env: PULL_SECRET_NAMESPACE
  - name: kernel.image
    value: ${component.harbor.url}/library/jupyter:latest
    kind: link
  - name: s3.endpoint
    kind: user
    fromEnv: APPLICATION_S3_ENDPOINT
  - name: s3.accessKey
    kind: user
    fromEnv: APPLICATION_S3_ACCESS_KEY
  - name: s3.secretKey
    kind: user
    fromEnv: APPLICATION_S3_SECRET_KEY
- name: component.s3fuse
  parameters:
  - name: namespace
    value: kubeflow
- name: component.kaniko
  parameters:
  - name: name
    value: jupyter-kernel
  - name: namespace
    value: kubeflow
  - name: destination
    kind: link
    value: ${component.harbor.url}/library/jupyter
  - name: contextDir
    value: kernel
- name: component.harbor.url
  kind: user
  fromEnv: COMPONENT_HARBOR_URL
- name: component.harbor.pullSecret
  kind: user
  fromEnv: DOCKER_REGISTRY_PULLSECRET

- name: component.git
  parameters:
  - name: remote
  - name: username
  - name: password
  - name: branch
  - name: secretName
    value: github
    env: GIT_SECRET_NAME

- name: component.github
  parameters:
  - name: token
    fromEnv: GITHUB_TOKEN
  - name: repository.organization
    fromEnv: GITHUB_ORG
  - name: repository.name
    fromEnv: APPLICATION
  - name: repository.description
    value: ${application.description}
  - name: workspace
    fromEnv: APP_DIR

  - name: component.bucket.endpoint
  - name: component.minio.accessKey
  - name: component.minio.secretKey

templates:
  files:
  - "templates/*.template"
